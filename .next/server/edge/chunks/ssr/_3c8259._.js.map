{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/auth.config.ts"],"sourcesContent":["import { NextAuthConfig } from 'next-auth';\nimport CredentialProvider from 'next-auth/providers/credentials';\nimport GithubProvider from 'next-auth/providers/github';\n\nconst authConfig = {\n  providers: [\n    GithubProvider({\n      clientId: process.env.GITHUB_ID ?? '',\n      clientSecret: process.env.GITHUB_SECRET ?? ''\n    }),\n    CredentialProvider({\n      credentials: {\n        email: {\n          type: 'email'\n        },\n        password: {\n          type: 'password'\n        }\n      },\n      async authorize(credentials, req) {\n        const user = {\n          id: '1',\n          name: 'John',\n          email: credentials?.email as string\n        };\n        if (user) {\n          // Any object returned will be saved in `user` property of the JWT\n          return user;\n        } else {\n          // If you return null then an error will be displayed advising the user to check their details.\n          return null;\n\n          // You can also Reject this callback with an Error thus the user will be sent to the error page with the error message as a query parameter\n        }\n      }\n    })\n  ],\n  pages: {\n    signIn: '/' //sigin page\n  }\n} satisfies NextAuthConfig;\n\nexport default authConfig;\n"],"names":[],"mappings":";;;;;;;;;;AAIA,MAAM,aAAa;IACjB,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,SAAS,IAAI;YACnC,cAAc,QAAQ,GAAG,CAAC,aAAa,IAAI;QAC7C;QACA,CAAA,GAAA,0JAAA,CAAA,UAAkB,AAAD,EAAE;YACjB,aAAa;gBACX,OAAO;oBACL,MAAM;gBACR;gBACA,UAAU;oBACR,MAAM;gBACR;YACF;YACA,MAAM,WAAU,WAAW,EAAE,GAAG;gBAC9B,MAAM,OAAO;oBACX,IAAI;oBACJ,MAAM;oBACN,OAAO,aAAa;gBACtB;gBACA,IAAI,MAAM;oBACR,kEAAkE;oBAClE,OAAO;gBACT,OAAO;oBACL,+FAA+F;oBAC/F,OAAO;gBAEP,2IAA2I;gBAC7I;YACF;QACF;KACD;IACD,OAAO;QACL,QAAQ,IAAI,YAAY;IAC1B;AACF;uCAEe"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/middleware.ts"],"sourcesContent":["// Protecting routes with next-auth\n// https://next-auth.js.org/configuration/nextjs#middleware\n// https://nextjs.org/docs/app/building-your-application/routing/middleware\n\nimport NextAuth from 'next-auth';\nimport authConfig from './auth.config';\n\nconst { auth } = NextAuth(authConfig);\n\nexport default auth((req) => {\n  if (!req.auth) {\n    const url = req.url.replace(req.nextUrl.pathname, '/');\n    return Response.redirect(url);\n  }\n});\n\nexport const config = { matcher: ['/dashboard/:path*'] };\n"],"names":[],"mappings":"AAAA,mCAAmC;AACnC,2DAA2D;AAC3D,2EAA2E;;;;;;;;;;;AAK3E,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE,8GAAA,CAAA,UAAU;uCAErB,KAAK,CAAC;IACnB,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,MAAM,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE;QAClD,OAAO,SAAS,QAAQ,CAAC;IAC3B;AACF;AAEO,MAAM,SAAS;IAAE,SAAS;QAAC;KAAoB;AAAC"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}